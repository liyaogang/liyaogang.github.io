<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李耀刚的博客</title>
  <subtitle>李耀刚的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liyaogang.github.io/"/>
  <updated>2016-05-30T16:15:18.000Z</updated>
  <id>http://liyaogang.github.io/</id>
  
  <author>
    <name>L.Y.G.</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第一个iOS程序</title>
    <link href="http://liyaogang.github.io/articles/iOS/2015-03-16-HTML5/%E7%AC%AC%E4%B8%80%E4%B8%AAiOS%E7%A8%8B%E5%BA%8F/"/>
    <id>http://liyaogang.github.io/articles/iOS/2015-03-16-HTML5/第一个iOS程序/</id>
    <published>2015-03-16T05:58:41.000Z</published>
    <updated>2016-05-30T16:15:18.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt; 前端知识体系：&lt;/strong&gt;是否打开公司的昆明呢发生的耐克公司能看的是两个是否该看的好老师&lt;br&gt;呵呵是多少&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 前端知识体系：&lt;/strong&gt;是否打开公司的昆明呢发生的耐克公司能看的是两个是否该看的好老师&lt;br&gt;呵呵是多少&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://liyaogang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://liyaogang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>C语言简单调用shell命令</title>
    <link href="http://liyaogang.github.io/articles/iOS/2015-03-16-about/about/"/>
    <id>http://liyaogang.github.io/articles/iOS/2015-03-16-about/about/</id>
    <published>2015-03-16T05:58:41.000Z</published>
    <updated>2016-05-30T17:12:51.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt; 前端知识体系：&lt;/strong&gt;是否打开公司的昆明呢发生的耐克公司能看的是两个是否该看的好老师&lt;br&gt;呵呵是多少&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##C语言简单调用shell命令&lt;br&gt;C语言简单调用shell代码,只需要导入&lt;code&gt;stdlib.h&lt;/code&gt;头文件,然后使用&lt;code&gt;system(const char * string);&lt;/code&gt;函数即可实现shell命令的简单调用,&lt;code&gt;string&lt;/code&gt;字符串是shell命令,也可以是shell脚本文件.&lt;br&gt;如:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;system(&amp;quot;echo \&amp;quot;HELLO.\&amp;quot;&amp;quot;);&lt;/code&gt; 简单调用一条shell命令.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;system(&amp;quot;sh ./install.sh&amp;quot;);&lt;/code&gt; 执行shell脚本文件.  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;system(&amp;quot;sayHello=\&amp;quot;HELLO.\&amp;quot;; echo $sayHello&amp;quot;);&lt;/code&gt; 一次执行多条shell命令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;system()&lt;/code&gt; 函数简单调用shell命令示例代码如下:&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Objective-C&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; system函数存在stdlib库中,需要导入头文件stdlib.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#include &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 执行shell命令,只需要将shell命令写成类似下面的字符串,即可一条一条执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    system(&lt;span class=&quot;string&quot;&gt;&quot;echo \&quot;看到此消息说明shell命令执行成功！请按任意键退出...\&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    system(&lt;span class=&quot;string&quot;&gt;&quot;read waiting&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    system(&lt;span class=&quot;string&quot;&gt;&quot;exit&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; system函数存在stdlib库中,需要导入头文件stdlib.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#include &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 执行shell命令,只需要将shell命令写成类似下面的字符串,即可一条一条执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    system(&lt;span class=&quot;string&quot;&gt;&quot;echo \&quot;看到此消息说明shell命令执行成功！请按任意键退出...\&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    system(&lt;span class=&quot;string&quot;&gt;&quot;read waiting&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    system(&lt;span class=&quot;string&quot;&gt;&quot;exit&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 前端知识体系：&lt;/strong&gt;是否打开公司的昆明呢发生的耐克公司能看的是两个是否该看的好老师&lt;br&gt;呵呵是多少&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://liyaogang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://liyaogang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>我的生活</title>
    <link href="http://liyaogang.github.io/articles/life/2015-03-16-life/life/"/>
    <id>http://liyaogang.github.io/articles/life/2015-03-16-life/life/</id>
    <published>2015-03-16T05:58:41.000Z</published>
    <updated>2016-05-30T16:14:46.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt; 前端知识体系：&lt;/strong&gt;是否打开公司的昆明呢发生的耐克公司能看的是两个是否该看的好老师&lt;br&gt;呵呵是多少&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 前端知识体系：&lt;/strong&gt;是否打开公司的昆明呢发生的耐克公司能看的是两个是否该看的好老师&lt;br&gt;呵呵是多少&lt;br&gt;
    
    </summary>
    
      <category term="life" scheme="http://liyaogang.github.io/categories/life/"/>
    
    
      <category term="life" scheme="http://liyaogang.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>设置浏览器实时刷新方法</title>
    <link href="http://liyaogang.github.io/articles/HTML5/2015-01-01-HTML5/%E8%AE%BE%E7%BD%AE%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E6%96%B9%E6%B3%95/"/>
    <id>http://liyaogang.github.io/articles/HTML5/2015-01-01-HTML5/设置浏览器实时刷新方法/</id>
    <published>2015-01-01T04:00:00.000Z</published>
    <updated>2016-05-31T17:30:11.000Z</updated>
    
    <content type="html">&lt;p&gt;在做前端开发时，我们经常会碰到这样的情况，每次写完html代码，总是需要打开浏览器刷新页面查看预览效果，这样重复的操作无疑是非常费时费力的，因此实现一个写完代码就可以自动刷新浏览器查看预览效果的功能是非常有必要的，下面就介绍两种方法，来实现我们需要的这个功能。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h2&gt;&lt;h3 id=&quot;WebStorm-谷歌浏览器-JetBrains-IDE-Support&quot;&gt;&lt;a href=&quot;#WebStorm-谷歌浏览器-JetBrains-IDE-Support&quot; class=&quot;headerlink&quot; title=&quot;WebStorm+谷歌浏览器+JetBrains IDE Support&quot;&gt;&lt;/a&gt;WebStorm+谷歌浏览器+&lt;a href=&quot;https://chrome.google.com/webstore/detail/jetbrains-ide-support/hmhgeddbohgjknpmjagkdomcpobmllji&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JetBrains IDE Support&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;JetBrains IDE Support 是一个谷歌浏览器插件.&lt;br&gt;优点：操作简单&lt;br&gt;缺点：只能实现在谷歌浏览器中实时预览  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;软件环境：&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装WebStorm  &lt;/li&gt;
&lt;li&gt;安装谷歌浏览器  &lt;/li&gt;
&lt;li&gt;安装谷歌浏览器JetBrains插件&lt;br&gt;&lt;a href=&quot;resources/JetBrains%E6%8F%92%E4%BB%B6.zip&quot;&gt;JetBrains插件下载 (附插件安装方法)&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;设置步骤：&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 WebStorm =&gt; 打开  Preferences =&gt; 搜索框输入 Live Edit 搜索找到 Live Edit 选项  &lt;/li&gt;
&lt;li&gt;勾选 Highlight current…  &lt;/li&gt;
&lt;li&gt;勾选 Auto in (ms) 设置 300  &lt;/li&gt;
&lt;li&gt;勾选 Restart if…  &lt;/li&gt;
&lt;li&gt;重启 WebStorm  &lt;/li&gt;
&lt;li&gt;点击 WebStorm 右上角的测试按钮，在浏览器中弹出预览窗口  &lt;/li&gt;
&lt;li&gt;提示：浏览器预览窗口的黄色提示条一定不能关掉，如果关掉浏览器预览功能会失效。  &lt;/li&gt;
&lt;li&gt;在WebStorm中编辑html文件后，谷歌浏览器就可以自动刷新看到预览效果了。&lt;br&gt;&lt;img src=&quot;images/WebStormLiveEdit.png&quot; alt=&quot;WebStormLiveEdit&quot;&gt;  &lt;br&gt; &lt;br&gt; &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;方法二&quot;&gt;&lt;a href=&quot;#方法二&quot; class=&quot;headerlink&quot; title=&quot;方法二&quot;&gt;&lt;/a&gt;方法二&lt;/h2&gt;&lt;h3 id=&quot;使用Browsersync插件&quot;&gt;&lt;a href=&quot;#使用Browsersync插件&quot; class=&quot;headerlink&quot; title=&quot;使用Browsersync插件&quot;&gt;&lt;/a&gt;使用&lt;a href=&quot;http://www.browsersync.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Browsersync&lt;/a&gt;插件&lt;/h3&gt;&lt;p&gt;优点：功能强大，全平台支持&lt;br&gt;缺点：安装稍复杂，每预览一个工程都需要执行一遍命令  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Browsersync简介&lt;/strong&gt;&lt;br&gt;Browsersync能让浏览器实时、快速响应您的文件更改（html、js、css、sass、less等）并自动刷新页面。更重要的是 Browsersync可以同时在PC、平板、手机等设备下进行调试。您可以想象一下：“假设您的桌子上有pc、ipad、iphone、android等设备，同时打开了您需要调试的页面，当您使用browsersync后，您的任何一次代码保存，以上的设备都会同时显示您的改动”。无论您是前端还是后端工程师，使用它将提高您30%的工作效率。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Browsersync安装&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装&lt;a href=&quot;http://brew.sh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Homebrew&lt;/a&gt;&lt;br&gt;终端执行以下命令安装Homebrew  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ /usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/li&gt;
&lt;li&gt;安装 node.js&lt;br&gt;终端执行以下命令安装npm或者到&lt;a href=&quot;http://nodejs.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;下载安装包安装  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brew install node&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/li&gt;
&lt;li&gt;安装 Browsersync&lt;br&gt;终端执行以下命令安装 Browsersync  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g browser-sync&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  
安装时如果出现 EACCES error 问题，请参考&lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions#fixing-npm-permissions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;此处&lt;/a&gt;解决.  &lt;/li&gt;
&lt;li&gt;启动 Browsersync&lt;br&gt;切换到项目根目录，在终端中执行以下命令，监听所有文件的变化&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ browser-sync start --server --files &amp;quot;**/*.*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/li&gt;
&lt;li&gt;当被监听的文件被修改时，浏览器中即可自动刷新实现预览。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在做前端开发时，我们经常会碰到这样的情况，每次写完html代码，总是需要打开浏览器刷新页面查看预览效果，这样重复的操作无疑是非常费时费力的，因此实现一个写完代码就可以自动刷新浏览器查看预览效果的功能是非常有必要的，下面就介绍两种方法，来实现我们需要的这个功能。&lt;br&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://liyaogang.github.io/categories/HTML5/"/>
    
    
      <category term="iOS" scheme="http://liyaogang.github.io/tags/iOS/"/>
    
      <category term="HTML5" scheme="http://liyaogang.github.io/tags/HTML5/"/>
    
      <category term="WebStorm" scheme="http://liyaogang.github.io/tags/WebStorm/"/>
    
  </entry>
  
</feed>
